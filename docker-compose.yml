version: "3.1"

x-base: &base
  volumes:
      - ./public:/var/www/html
      - ./scripts:/var/www/scripts
      - ./data:/var/www/data
      # Authentication
      # passwd/group should be mounted into any container
      # needing to share the user/group IDs
      # - /etc/group:/etc/group:ro
      # - /etc/passwd:/etc/passwd:ro
  environment:
      # APACHE_DOCUMENT_ROOT: "/var/www/public"
      APACHE_RUN_USER: "#${DOCKER_USER}"
      APACHE_RUN_GROUP: "#${DOCKER_USER_GROUP}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: test123
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DEBUG: true
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('SCRIPT_DEBUG', true);
        define('WP_DEVELOPMENT_MODE', 'theme');
        define('WP_ENVIRONMENT_TYPE', 'local');

        define('CF_SMTP', true);
        define('CF_SMTP_HOST', 'mail');
        define('CF_SMTP_PORT', 1025);

        define('WP_SITEURL', 'http://wp.local');
        define('WP_HOME', 'http://wp.local');
      XDEBUG_CONFIG: ${XDEBUG_CONFIG}
  user: "${DOCKER_USER}:${DOCKER_USER_GROUP}"

services:
  wordpress:
    build:
      context: ./dev/wp
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - mysql
    <<: *base
  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: test123
  cli:
    build:
      context: ./dev/cli
      dockerfile: Dockerfile
    depends_on:
      - wordpress
    <<: *base
  mail:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
volumes:
  db-data:
